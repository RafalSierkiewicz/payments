{"version":3,"sources":["reportWebVitals.ts","actions/expenses/expenses-actions.ts","actions/auth/auth-actions.ts","actions/users/users-actions.ts","actions/index.ts","utils/redux-helpers.ts","reducers/expenses-reducer.ts","reducers/auth-reducer.ts","reducers/users-reducer.ts","sagas/expenses-saga.ts","utils/keys.ts","utils/colors.ts","sagas/auth-saga.ts","sagas/users-saga.ts","sagas/root-saga.ts","store/root-state.ts","store/root-store.ts","selectors/expenses-selectors.ts","selectors/users-selector.ts","components/expenses/ExpensesCharts.tsx","components/expenses/CompanyExpenseChart.tsx","components/expenses/forms/ExpenseSettingSchemaForm.tsx","components/expenses/ExpenseSchemasPage.tsx","components/expenses/forms/ExpenseSettingTypeForm.tsx","components/expenses/ExpenseTypesPage.tsx","components/expenses/forms/ExpensePricePartForm.tsx","components/expenses/ExpensePricePartPage.tsx","components/expenses/ExpensesModule.tsx","components/expenses/ExpensesList.tsx","components/expenses/ExpenseSummary.tsx","components/expenses/ExpensesPage.tsx","components/auth/LogoutModule.tsx","components/auth/LoginModule.tsx","components/auth/RegisterModule.tsx","components/common/Sidebar.tsx","components/users/UsersList.tsx","components/users/UsersPage.tsx","utils/model.ts","components/users/UsersEdit.tsx","components/common/hoc/withAuth.tsx","components/users/UsersModule.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","actionTypes","LOAD_ALL_EXPENSES","LOAD_SCHEMA_EXPENSES","LOAD_ALL_TYPES_START","LOAD_ALL_TYPES_SUCCESS","LOAD_ALL_PARTS_SUCCESS","LOAD_ALL_PARTS_START","LOAD_SCHEMA_EXPENSES_SUCCESS","LOAD_SCHEMA_CHART_DATA_SUCCESS","LOAD_SCHEMA_SUMMARY_SUCCESS","LOAD_ALL_SCHEMAS_START","LOAD_ALL_SCHEMAS_SUCCESS","CREATE_EXPENSE","CREATE_EXPENSE_TYPE","CREATE_EXPENSE_SCHEMA","CREATE_EXPENSE_PART","DELETE_EXPENSE","DELETE_EXPENSE_TYPE","DELETE_EXPENSE_SCHEMA","DELETE_EXPENSE_PART","LOAD_COMPANY_CHART_START","LOAD_COMPANY_CHART_SUCCESS","LOGOUT","LOGIN","REGISTER","LOAD_ALL_USERS_START","LOAD_ALL_USERS_SUCCESS","CREATE_USER","EDIT_USER","expenses","expensesActions","auth","authActions","users","usersActions","actions","loadAllExpensesStart","type","loadSchemaExpensesStart","payload","loadSchemaExpensesSuccess","loadAllPartsStart","loadAllTypesStart","loadAllTypesSuccess","loadAllSchemasStart","loadAllSchemasSuccess","createExpense","createExpenseType","createExpenseSchema","createExpensePricePart","loadAllPricePartsSuccess","loadSchemaChartDataSuccess","loadCompanyBarChartStart","loadCompanyBarChartSuccess","loadSchemaSummarySuccess","deleteExpense","deleteExpensePricePart","deleteExpenseSchema","deleteExpenseType","logout","login","register","loadAllUsersStart","loadAllUsersSuccess","createUser","editUser","createReducer","defaultState","actionHandlers","state","action","hasOwnProperty","defaultExpensesState","currentSchemaChartData","lineChart","data","barChart","currentSchemaSummary","usersSummary","total","payed","pricePartsMap","toReturn","companyChart","chartByType","chartBySchema","areExpensesLoading","types","schemas","parts","expensesReducer","defaultAuthState","authReducer","defaultUserState","usersReducer","loadSchemaExpenses","loadAllExpenseTypes","loadAllExpenseSchemas","loadCompanyChartData","createExpensePart","deleteExpensePart","loadAllPriceParts","axiosInstance","axios","call","fetchSchemaExpenseCall","fetchSchemaChartDataCall","chartData","fetchSchemaSummaryCall","summary","put","console","log","id","get","response","fetchAllExpenseTypesCall","expenseTypes","fetchAllExpenseSchemasCall","expenseSchemas","fetchCompanyChartDataCall","createExpenseTypeCall","expenseType","post","deleteExpenseTypeCall","delete","createExpenseCall","schemaId","deleteExpenseCall","expense","createExpenseSchemaCall","deleteExpenseSchemaCall","createExpensePartCall","deleteExpensePartCall","fetchAllPricePartCall","expensePart","expensesSaga","takeLatest","JWT_KEY","randomBetween","min","max","Math","floor","random","getRandomColor","values","_","el","r","g","b","background","border","loginCall","token","localStorage","setItem","push","loginData","registerCall","companyID","registerData","authSaga","loadAllUsers","updateUser","fetchAllUsersCall","createUserCall","user","updateUserCall","usersSaga","rootSaga","all","defaultAppState","expensesStore","authStore","usersStore","appHistory","createBrowserHistory","sagaMiddleware","reduxSaga","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","appStore","combineReducers","router","connectRouter","store","createStore","applyMiddleware","routerMiddleware","interceptors","request","use","config","headers","Authorization","getItem","resp","error","status","location","replace","Promise","reject","run","dispatch","getExpenses","getTypes","getParts","getExpensesSchemas","getSchemaChartData","getSchemaSummary","getUsers","getUserById","find","ExpensesCharts","React","useSelector","sum","borderWithBackgroundColor","labels","label","datasets","backgroundColor","borderColor","borderWidth","order","Container","CompanyExpenseChart","prepareChart","title","defaultExpenseSchemaCreate","name","expenseSchemaSchema","Yup","shape","required","ExpensesSchemaForm","memo","useDispatch","initialValues","validationSchema","onSubmit","act","setSubmitting","handleSubmit","handleChange","Form","Row","Group","as","Col","controlId","Control","placeholder","value","onChange","Button","size","variant","ExpensesSchemasPage","ListGroup","schema","Item","toString","noGutters","className","sm","onClick","defaultExpenseTypeCreate","expenseSchema","ExpensesTypeForm","ExpensesTypesPage","defaultPricePartCreate","percentile","isReturn","partSchema","ExpensesPricePartForm","resetForm","setStatus","success","Check","ExpensesPricePartPage","part","ExpensesModuleBase","this","props","fluid","Navbar","bg","expand","to","Toggle","aria-controls","Collapse","Nav","NavDropdown","exact","path","component","ExpensesPage","ExpensesModule","connect","withRouter","ExpensesList","grouped","typeId","key","Accordion","defaultActiveKey","Card","Header","eventKey","Number","price","isEmpty","userId","username","ExpenseSummary","sortBy","Object","keys","str","Table","striped","bordered","hover","map","u","partName","positive","typeName","ExpensesPageBase","inputRef","createRef","prevProps","prevState","snapshot","priceParts","defaultExpenseCreate","t","email","pricePart","p","current","focus","errors","isInvalid","ref","PureComponent","match","params","LogoutModule","removeItem","loginSchema","password","defaultLoginValues","LoginModule","Label","registerSchema","company","defaultRegisterLogin","RegisterModule","SidebarBase","activeClassName","render","routeProps","Sidebar","UsersList","defaultUserValues","userCreateSchema","UsersPage","undefOrValue","undefined","WrappedComponent","confirmPassword","UsersEdit","defaultUserEditSchema","UsersModuleBase","UsersModule","App","ReactDOM","history","document","getElementById"],"mappings":"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","file":"static/js/main.8e3053d7.chunk.js","sourcesContent":["import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  IActionEmpty,\n  IActionTyped,\n  IBarChart,\n  ICompanyBarCharts,\n  IExpense,\n  IExpenseCreate,\n  IExpensePart,\n  IExpensePartCreate,\n  IExpenseSchema,\n  IExpenseSchemaCreate,\n  IExpenseType,\n  IExpenseTypeCreate,\n  ISchemaBarChart,\n  ISummary,\n} from 'models';\n\nconst loadAllExpensesStart = (): IActionEmpty => ({\n  type: actionTypes.LOAD_ALL_EXPENSES,\n});\n\nconst loadSchemaExpensesStart = (payload: number): IActionTyped<number> => ({\n  payload,\n  type: actionTypes.LOAD_SCHEMA_EXPENSES,\n});\n\nconst loadCompanyBarChartStart = (): IActionEmpty => ({\n  type: actionTypes.LOAD_COMPANY_CHART_START,\n});\n\nconst loadCompanyBarChartSuccess = (payload: ICompanyBarCharts): IActionTyped<ICompanyBarCharts> => ({\n  payload,\n  type: actionTypes.LOAD_COMPANY_CHART_SUCCESS,\n});\n\nconst loadAllTypesStart = (): IActionEmpty => ({\n  type: actionTypes.LOAD_ALL_TYPES_START,\n});\n\nconst loadAllPartsStart = (): IActionEmpty => ({\n  type: actionTypes.LOAD_ALL_PARTS_START,\n});\n\nconst createExpense = (payload: IExpenseCreate): IActionTyped<IExpenseCreate> => ({\n  payload,\n  type: actionTypes.CREATE_EXPENSE,\n});\n\nconst createExpenseType = (payload: IExpenseTypeCreate): IActionTyped<IExpenseTypeCreate> => ({\n  payload,\n  type: actionTypes.CREATE_EXPENSE_TYPE,\n});\n\nconst createExpenseSchema = (payload: IExpenseSchemaCreate): IActionTyped<IExpenseSchemaCreate> => ({\n  payload,\n  type: actionTypes.CREATE_EXPENSE_SCHEMA,\n});\n\nconst createExpensePricePart = (payload: IExpensePartCreate): IActionTyped<IExpensePartCreate> => ({\n  payload,\n  type: actionTypes.CREATE_EXPENSE_PART,\n});\n\nconst deleteExpense = (payload: IExpense): IActionTyped<IExpense> => ({\n  payload,\n  type: actionTypes.DELETE_EXPENSE,\n});\n\nconst deleteExpenseType = (payload: IExpenseType): IActionTyped<IExpenseType> => ({\n  payload,\n  type: actionTypes.DELETE_EXPENSE_TYPE,\n});\n\nconst deleteExpenseSchema = (payload: IExpenseSchema): IActionTyped<IExpenseSchema> => ({\n  payload,\n  type: actionTypes.DELETE_EXPENSE_SCHEMA,\n});\n\nconst deleteExpensePricePart = (payload: IExpensePart): IActionTyped<IExpensePart> => ({\n  payload,\n  type: actionTypes.DELETE_EXPENSE_PART,\n});\n\nconst loadAllPricePartsSuccess = (payload: IExpensePart[]): IActionTyped<IExpensePart[]> => ({\n  payload,\n  type: actionTypes.LOAD_ALL_PARTS_SUCCESS,\n});\n\nconst loadAllSchemasStart = (): IActionEmpty => ({\n  type: actionTypes.LOAD_ALL_SCHEMAS_START,\n});\n\nconst loadAllSchemasSuccess = (payload: IExpenseSchema[]): IActionTyped<IExpenseSchema[]> => ({\n  payload,\n  type: actionTypes.LOAD_ALL_SCHEMAS_SUCCESS,\n});\n\nconst loadSchemaExpensesSuccess = (payload: IExpense[]): IActionTyped<IExpense[]> => ({\n  payload,\n  type: actionTypes.LOAD_SCHEMA_EXPENSES_SUCCESS,\n});\n\nconst loadSchemaChartDataSuccess = (payload: ISchemaBarChart[]): IActionTyped<ISchemaBarChart[]> => ({\n  payload,\n  type: actionTypes.LOAD_SCHEMA_CHART_DATA_SUCCESS,\n});\n\nconst loadSchemaSummarySuccess = (payload: ISummary): IActionTyped<ISummary> => ({\n  payload,\n  type: actionTypes.LOAD_SCHEMA_SUMMARY_SUCCESS,\n});\n\nconst loadAllTypesSuccess = (payload: IExpenseType[]): IActionTyped<IExpenseType[]> => ({\n  payload,\n  type: actionTypes.LOAD_ALL_TYPES_SUCCESS,\n});\n\nconst actionTypes = {\n  LOAD_ALL_EXPENSES: 'LOAD_ALL_EXPENSES',\n  LOAD_SCHEMA_EXPENSES: 'LOAD_SCHEMA_EXPENSES',\n  LOAD_ALL_TYPES_START: 'LOAD_ALL_TYPES_START',\n  LOAD_ALL_TYPES_SUCCESS: 'LOAD_ALL_TYPES_SUCCESS',\n  LOAD_ALL_PARTS_SUCCESS: 'LOAD_ALL_PARTS_SUCCESS',\n  LOAD_ALL_PARTS_START: 'LOAD_ALL_PARTS_START',\n\n  LOAD_SCHEMA_EXPENSES_SUCCESS: 'LOAD_SCHEMA_EXPENSES_SUCCESS',\n  LOAD_SCHEMA_CHART_DATA_SUCCESS: 'LOAD_SCHEMA_CHART_DATA_SUCCESS',\n  LOAD_SCHEMA_SUMMARY_SUCCESS: 'LOAD_SCHEMA_SUMMARY_SUCCESS',\n  LOAD_ALL_SCHEMAS_START: 'LOAD_ALL_SCHEMAS_START',\n  LOAD_ALL_SCHEMAS_SUCCESS: 'LOAD_ALL_SCHEMAS_SUCCESS',\n  CREATE_EXPENSE: 'CREATE_EXPENSE',\n  CREATE_EXPENSE_TYPE: 'CREATE_EXPENSE_TYPE',\n  CREATE_EXPENSE_SCHEMA: 'CREATE_EXPENSE_SCHEMA',\n  CREATE_EXPENSE_PART: 'CREATE_EXPENSE_PART',\n\n  DELETE_EXPENSE: 'DELETE_EXPENSE',\n  DELETE_EXPENSE_TYPE: 'DELETE_EXPENSE_TYPE',\n  DELETE_EXPENSE_SCHEMA: 'DELETE_EXPENSE_SCHEMA',\n  DELETE_EXPENSE_PART: 'DELETE_EXPENSE_PART',\n\n  LOAD_COMPANY_CHART_START: 'LOAD_COMPANY_CHART_START',\n  LOAD_COMPANY_CHART_SUCCESS: 'LOAD_COMPANY_CHART_SUCCESS',\n};\n\nconst actions = {\n  loadAllExpensesStart,\n  loadSchemaExpensesStart,\n  loadSchemaExpensesSuccess,\n  loadAllPartsStart,\n  loadAllTypesStart,\n  loadAllTypesSuccess,\n  loadAllSchemasStart,\n  loadAllSchemasSuccess,\n  createExpense,\n  createExpenseType,\n  createExpenseSchema,\n  createExpensePricePart,\n  loadAllPricePartsSuccess,\n  loadSchemaChartDataSuccess,\n  loadCompanyBarChartStart,\n  loadCompanyBarChartSuccess,\n  loadSchemaSummarySuccess,\n  deleteExpense,\n  deleteExpensePricePart,\n  deleteExpenseSchema,\n  deleteExpenseType,\n};\n\nexport { actionTypes, actions };\n","import { IActionEmpty, IActionTyped, ILogin, IRegister } from 'models';\n\nconst logout = (): IActionEmpty => ({\n  type: actionTypes.LOGOUT,\n});\n\nconst login = (payload: ILogin): IActionTyped<ILogin> => ({\n  payload,\n  type: actionTypes.LOGIN,\n});\n\nconst register = (payload: IRegister): IActionTyped<IRegister> => ({\n  payload,\n  type: actionTypes.REGISTER,\n});\nconst actionTypes = {\n  LOGOUT: 'LOGOUT',\n  LOGIN: 'LOGIN',\n  REGISTER: 'REGISTER',\n};\n\nconst actions = {\n  logout,\n  login,\n  register,\n};\n\nexport { actionTypes, actions };\n","import { IActionEmpty, IActionTyped, IUser, IUserCreate, IUserUpdate } from 'models';\n\nconst loadAllUsersStart = (): IActionEmpty => ({\n  type: actionTypes.LOAD_ALL_USERS_START,\n});\n\nconst createUser = (payload: IUserCreate): IActionTyped<IUserCreate> => ({\n  payload,\n  type: actionTypes.CREATE_USER,\n});\n\nconst editUser = (payload: IUserUpdate): IActionTyped<IUserUpdate> => ({\n  payload,\n  type: actionTypes.EDIT_USER,\n});\n\nconst loadAllUsersSuccess = (payload: IUser[]): IActionTyped<IUser[]> => ({\n  payload,\n  type: actionTypes.LOAD_ALL_USERS_SUCCESS,\n});\n\nconst actionTypes = {\n  LOAD_ALL_USERS_START: 'LOAD_ALL_USERS',\n  LOAD_ALL_USERS_SUCCESS: 'LOAD_ALL_USERS_SUCCESS',\n  CREATE_USER: 'CREATE_USER',\n  EDIT_USER: 'CREATE_USER',\n};\n\nconst actions = {\n  loadAllUsersStart,\n  loadAllUsersSuccess,\n  createUser,\n  editUser,\n};\n\nexport { actionTypes, actions };\n","import * as expensesActions from 'actions/expenses/expenses-actions';\nimport * as authActions from 'actions/auth/auth-actions';\nimport * as usersActions from 'actions/users/users-actions';\n\nconst actionTypes = {\n  expenses: expensesActions.actionTypes,\n  auth: authActions.actionTypes,\n  users: usersActions.actionTypes,\n};\n\nconst actions = {\n  expenses: expensesActions.actions,\n  auth: authActions.actions,\n  users: usersActions.actions,\n};\n\nexport { actionTypes, actions };\n","import { IActionHandlers } from \"models\";\n\nfunction createReducer<T>(defaultState: T, actionHandlers: IActionHandlers<T>) {\n  return function reducer(state = defaultState, action: any) {\n    if (actionHandlers.hasOwnProperty(action.type)) {\n      return actionHandlers[action.type](state, action);\n    }\n\n    return state;\n  };\n}\n\nexport { createReducer };\n","import {\n  IActionHandlers,\n  IActionPayloadTyped,\n  ICompanyBarCharts,\n  IExpense,\n  IExpensePart,\n  IExpenseSchema,\n  IExpensesStore,\n  IExpenseType,\n  ISchemaBarChart,\n  ISummary,\n} from 'models';\nimport { actionTypes } from 'actions';\nimport { createReducer } from 'utils/redux-helpers';\n\nconst defaultExpensesState: IExpensesStore = {\n  expenses: [],\n  currentSchemaChartData: {\n    lineChart: { data: [] },\n    barChart: {\n      data: [],\n    },\n  },\n  currentSchemaSummary: {\n    usersSummary: [],\n    total: {\n      payed: 0,\n      pricePartsMap: {},\n      toReturn: 0,\n    },\n  },\n  companyChart: { chartByType: { data: [] }, chartBySchema: { data: [] } },\n  areExpensesLoading: false,\n  types: [],\n  schemas: [],\n  parts: [],\n};\n\nconst actionHandlers: IActionHandlers<IExpensesStore> = {\n  [actionTypes.expenses.LOAD_SCHEMA_EXPENSES]: (state) => ({\n    ...state,\n    areExpensesLoading: true,\n  }),\n  [actionTypes.expenses.LOAD_SCHEMA_EXPENSES_SUCCESS]: (state, { payload }: IActionPayloadTyped<IExpense[]>) => ({\n    ...state,\n    expenses: payload,\n    areExpensesLoading: false,\n  }),\n  [actionTypes.expenses.LOAD_ALL_TYPES_SUCCESS]: (state, { payload }: IActionPayloadTyped<IExpenseType[]>) => ({\n    ...state,\n    types: payload,\n  }),\n  [actionTypes.expenses.LOAD_ALL_SCHEMAS_SUCCESS]: (state, { payload }: IActionPayloadTyped<IExpenseSchema[]>) => ({\n    ...state,\n    schemas: payload,\n  }),\n  [actionTypes.expenses.LOAD_SCHEMA_SUMMARY_SUCCESS]: (state, { payload }: IActionPayloadTyped<ISummary>) => ({\n    ...state,\n    currentSchemaSummary: payload,\n  }),\n  [actionTypes.expenses.LOAD_ALL_PARTS_SUCCESS]: (state, { payload }: IActionPayloadTyped<IExpensePart[]>) => ({\n    ...state,\n    parts: payload,\n  }),\n  [actionTypes.expenses.LOAD_SCHEMA_CHART_DATA_SUCCESS]: (\n    state,\n    { payload }: IActionPayloadTyped<ISchemaBarChart>\n  ) => ({\n    ...state,\n    currentSchemaChartData: payload,\n  }),\n  [actionTypes.expenses.LOAD_COMPANY_CHART_SUCCESS]: (state, { payload }: IActionPayloadTyped<ICompanyBarCharts>) => ({\n    ...state,\n    companyChart: payload,\n  }),\n};\n\nexport const expensesReducer = createReducer(defaultExpensesState, actionHandlers);\nexport { defaultExpensesState };\n","import { IActionHandlers, IAuthStore } from \"models\";\nimport { createReducer } from \"utils/redux-helpers\";\n\nconst defaultAuthState: IAuthStore = {};\n\nconst actionHandlers: IActionHandlers<IAuthStore> = {};\n\nexport const authReducer = createReducer(defaultAuthState, actionHandlers);\nexport { defaultAuthState };\n","import { IActionHandlers, IActionPayloadTyped, IUser, IUsersStore } from 'models';\nimport { createReducer } from 'utils/redux-helpers';\nimport { actionTypes } from '../actions';\n\nconst defaultUserState: IUsersStore = {\n  users: [],\n};\n\nconst actionHandlers: IActionHandlers<IUsersStore> = {\n  [actionTypes.users.LOAD_ALL_USERS_SUCCESS]: (state, { payload }: IActionPayloadTyped<IUser[]>) => ({\n    ...state,\n    users: payload,\n  }),\n};\n\nexport const usersReducer = createReducer(defaultUserState, actionHandlers);\nexport { defaultUserState };\n","import axios, { AxiosResponse } from 'axios';\nimport { call, put, takeLatest } from 'redux-saga/effects';\n\nimport {\n  IActionEmpty,\n  IActionTyped,\n  IExpense,\n  IExpenseCreate,\n  IExpensePart,\n  IExpensePartCreate,\n  IExpenseSchema,\n  IExpenseType,\n  IExpenseTypeCreate,\n} from 'models';\nimport { actions, actionTypes } from 'actions';\n\nconst axiosInstance = axios;\n\nfunction* loadSchemaExpenses(action: IActionTyped<number>) {\n  try {\n    const expenses = yield call(fetchSchemaExpenseCall, action.payload);\n    const chartData = yield call(fetchSchemaChartDataCall, action.payload);\n    const summary = yield call(fetchSchemaSummaryCall, action.payload);\n    yield put(actions.expenses.loadSchemaExpensesSuccess(expenses));\n    yield put(actions.expenses.loadSchemaChartDataSuccess(chartData));\n    yield put(actions.expenses.loadSchemaSummarySuccess(summary));\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst fetchSchemaExpenseCall = (id: number) =>\n  axiosInstance.get(`/api/expenses/${id}`).then((response: AxiosResponse) => response.data);\n\nconst fetchSchemaChartDataCall = (id: number) =>\n  axiosInstance.get(`/api/expenses/${id}/summary/chart`).then((response: AxiosResponse) => response.data);\n\nconst fetchSchemaSummaryCall = (id: number) =>\n  axiosInstance.get(`/api/expenses/${id}/summary`).then((response: AxiosResponse) => response.data);\n\nfunction* loadAllExpenseTypes() {\n  try {\n    const expenseTypes = yield call(fetchAllExpenseTypesCall);\n\n    yield put(actions.expenses.loadAllTypesSuccess(expenseTypes));\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst fetchAllExpenseTypesCall = () =>\n  axiosInstance.get('/api/expenses/types').then((response: AxiosResponse) => response.data);\n\nfunction* loadAllExpenseSchemas() {\n  try {\n    const expenseSchemas = yield call(fetchAllExpenseSchemasCall);\n    const companyChart = yield call(fetchCompanyChartDataCall);\n    yield put(actions.expenses.loadAllSchemasSuccess(expenseSchemas));\n    yield put(actions.expenses.loadCompanyBarChartSuccess(companyChart));\n  } catch {\n    console.log('Error');\n  }\n}\n\nfunction* loadCompanyChartData() {\n  try {\n    const companyChart = yield call(fetchCompanyChartDataCall);\n    yield put(actions.expenses.loadCompanyBarChartSuccess(companyChart));\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst fetchCompanyChartDataCall = () =>\n  axiosInstance.get(`/api/expenses/summary`).then((response: AxiosResponse) => response.data);\n\nconst fetchAllExpenseSchemasCall = () =>\n  axiosInstance.get('/api/expenses/schemas').then((response: AxiosResponse) => response.data);\n\nfunction* createExpenseType(action: IActionTyped<IExpenseTypeCreate>) {\n  try {\n    yield call(createExpenseTypeCall, action.payload);\n    yield put(actions.expenses.loadAllTypesStart());\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst createExpenseTypeCall = (expenseType: IExpenseTypeCreate) =>\n  axiosInstance.post('/api/expenses/types', expenseType).then((response: AxiosResponse) => response.data);\n\nfunction* deleteExpenseType(action: IActionTyped<IExpenseType>) {\n  try {\n    yield call(deleteExpenseTypeCall, action.payload);\n    yield put(actions.expenses.loadAllTypesStart());\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst deleteExpenseTypeCall = (expenseType: IExpenseType) =>\n  axiosInstance.delete(`/api/expenses/types/${expenseType.id}`).then((response: AxiosResponse) => response.data);\n\nfunction* createExpense(action: IActionTyped<IExpenseCreate>) {\n  try {\n    yield call(createExpenseCall, action.payload);\n    yield put(actions.expenses.loadSchemaExpensesStart(action.payload.schemaId));\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst createExpenseCall = (expenseType: IExpenseCreate) =>\n  axiosInstance.post('/api/expenses', expenseType).then((response: AxiosResponse) => response.data);\n\nfunction* deleteExpense(action: IActionTyped<IExpense>) {\n  try {\n    yield call(deleteExpenseCall, action.payload);\n    yield put(actions.expenses.loadSchemaExpensesStart(action.payload.schemaId));\n  } catch {\n    console.log('Error');\n  }\n}\nconst deleteExpenseCall = (expense: IExpense) =>\n  axiosInstance\n    .delete(`/api/expenses/${expense.schemaId}/expense/${expense.id}`)\n    .then((response: AxiosResponse) => response.data);\n\nfunction* createExpenseSchema(action: IActionTyped<IExpenseSchema>) {\n  try {\n    yield call(createExpenseSchemaCall, action.payload);\n    yield put(actions.expenses.loadAllSchemasStart());\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst createExpenseSchemaCall = (expenseType: IExpenseSchema) =>\n  axiosInstance.post('/api/expenses/schemas', expenseType).then((response: AxiosResponse) => response.data);\n\nfunction* deleteExpenseSchema(action: IActionTyped<IExpenseSchema>) {\n  try {\n    yield call(deleteExpenseSchemaCall, action.payload);\n    yield put(actions.expenses.loadAllSchemasStart());\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst deleteExpenseSchemaCall = (expenseType: IExpenseSchema) =>\n  axiosInstance.delete(`/api/expenses/schemas/${expenseType.id}`).then((response: AxiosResponse) => response.data);\n\nfunction* createExpensePart(action: IActionTyped<IExpensePartCreate>) {\n  try {\n    yield call(createExpensePartCall, action.payload);\n    yield put(actions.expenses.loadAllPartsStart());\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst createExpensePartCall = (expenseType: IExpensePartCreate) =>\n  axiosInstance.post('/api/expenses/parts', expenseType).then((response: AxiosResponse) => response.data);\n\nfunction* deleteExpensePart(action: IActionTyped<IExpensePart>) {\n  try {\n    yield call(deleteExpensePartCall, action.payload);\n    yield put(actions.expenses.loadAllPartsStart());\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst deleteExpensePartCall = (expenseType: IExpensePart) =>\n  axiosInstance.delete(`/api/expenses/parts/${expenseType.id}`).then((response: AxiosResponse) => response.data);\n\nfunction* loadAllPriceParts() {\n  try {\n    const expensePart = yield call(fetchAllPricePartCall);\n\n    yield put(actions.expenses.loadAllPricePartsSuccess(expensePart));\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst fetchAllPricePartCall = () =>\n  axiosInstance.get('/api/expenses/parts').then((response: AxiosResponse) => response.data);\n\nexport const expensesSaga = [\n  takeLatest(actionTypes.expenses.LOAD_SCHEMA_EXPENSES, (action: IActionTyped<number>) => loadSchemaExpenses(action)),\n  takeLatest(actionTypes.expenses.LOAD_ALL_TYPES_START, (action: IActionEmpty) => loadAllExpenseTypes()),\n  takeLatest(actionTypes.expenses.LOAD_ALL_SCHEMAS_START, (action: IActionEmpty) => loadAllExpenseSchemas()),\n  takeLatest(actionTypes.expenses.LOAD_COMPANY_CHART_START, (action: IActionEmpty) => loadCompanyChartData()),\n  takeLatest(actionTypes.expenses.LOAD_ALL_PARTS_START, (action: IActionEmpty) => loadAllPriceParts()),\n  takeLatest(actionTypes.expenses.CREATE_EXPENSE, (action: IActionTyped<IExpenseCreate>) => createExpense(action)),\n  takeLatest(actionTypes.expenses.CREATE_EXPENSE_SCHEMA, (action: IActionTyped<IExpenseSchema>) =>\n    createExpenseSchema(action)\n  ),\n  takeLatest(actionTypes.expenses.CREATE_EXPENSE_TYPE, (action: IActionTyped<IExpenseTypeCreate>) =>\n    createExpenseType(action)\n  ),\n  takeLatest(actionTypes.expenses.CREATE_EXPENSE_PART, (action: IActionTyped<IExpensePartCreate>) =>\n    createExpensePart(action)\n  ),\n  takeLatest(actionTypes.expenses.DELETE_EXPENSE, (action: IActionTyped<IExpense>) => deleteExpense(action)),\n  takeLatest(actionTypes.expenses.DELETE_EXPENSE_SCHEMA, (action: IActionTyped<IExpenseSchema>) =>\n    deleteExpenseSchema(action)\n  ),\n  takeLatest(actionTypes.expenses.DELETE_EXPENSE_TYPE, (action: IActionTyped<IExpenseType>) =>\n    deleteExpenseType(action)\n  ),\n  takeLatest(actionTypes.expenses.DELETE_EXPENSE_PART, (action: IActionTyped<IExpensePart>) =>\n    deleteExpensePart(action)\n  ),\n];\n","export const JWT_KEY = 'JWT_TOKEN';\n","import * as _ from 'lodash';\n\nconst randomBetween = (min: number, max: number) => min + Math.floor(Math.random() * (max - min + 1));\nconst getRandomColor = (values: number[]) => {\n  return _.map(values, (el: number) => {\n    const r = randomBetween(0, 255);\n    const g = randomBetween(0, 255);\n    const b = randomBetween(0, 255);\n    return { background: `rgba(${r}, ${g}, ${b}, 0.2)`, border: `rgba(${r}, ${g}, ${b}, 1)` };\n  });\n};\n\nexport { getRandomColor };\n","import { IActionTyped } from '../models/common';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { actions, actionTypes } from 'actions';\nimport axios, { AxiosResponse } from 'axios';\nimport { ILogin, IRegister } from '../models/auth';\nimport { push } from 'connected-react-router';\nimport { JWT_KEY } from '../utils';\n\nfunction* login(action: IActionTyped<ILogin>) {\n  try {\n    const token = yield call(loginCall, action.payload);\n    localStorage.setItem(JWT_KEY, token);\n    yield put(push('/'));\n    yield put(actions.users.loadAllUsersStart());\n  } catch (error) {\n    console.log('Error', error);\n  }\n}\n\nconst loginCall = (loginData: ILogin) =>\n  axios.post('/api/users/login', loginData).then((response: AxiosResponse) => response.data);\n\nfunction* register(action: IActionTyped<IRegister>) {\n  try {\n    const companyID = yield call(registerCall, action.payload);\n    console.log(companyID);\n  } catch (error) {\n    console.log('Error', error);\n  }\n}\n\nconst registerCall = (registerData: IRegister) =>\n  axios.post('/api/users/register', registerData).then((response: AxiosResponse) => response.data);\n\nexport const authSaga = [\n  takeLatest(actionTypes.auth.LOGIN, (action: IActionTyped<ILogin>) => login(action)),\n  takeLatest(actionTypes.auth.REGISTER, (action: IActionTyped<IRegister>) => register(action)),\n];\n","import axios, { AxiosResponse } from 'axios';\nimport { call, put, takeLatest } from 'redux-saga/effects';\n\nimport { IActionEmpty, IActionTyped, IUserCreate, IUserUpdate } from 'models';\nimport { actions, actionTypes } from 'actions';\n\nfunction* loadAllUsers() {\n  try {\n    const users = yield call(fetchAllUsersCall);\n    yield put(actions.users.loadAllUsersSuccess(users));\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst fetchAllUsersCall = () => axios.get('/api/users').then((response: AxiosResponse) => response.data);\n\nfunction* createUser(action: IActionTyped<IUserCreate>) {\n  try {\n    yield call(createUserCall, action.payload);\n    yield put(actions.users.loadAllUsersStart());\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst createUserCall = (user: IUserCreate) =>\n  axios.post('/api/users', user).then((response: AxiosResponse) => response.data);\n\nfunction* updateUser(action: IActionTyped<IUserUpdate>) {\n  try {\n    yield call(updateUserCall, action.payload);\n    yield put(actions.users.loadAllUsersStart());\n  } catch {\n    console.log('Error');\n  }\n}\n\nconst updateUserCall = (user: IUserUpdate) =>\n  axios.put(`/api/users/${user.id}`, user).then((response: AxiosResponse) => response.data);\n\nexport const usersSaga = [\n  takeLatest(actionTypes.users.LOAD_ALL_USERS_START, (action: IActionEmpty) => loadAllUsers()),\n  takeLatest(actionTypes.users.CREATE_USER, (action: IActionTyped<IUserCreate>) => createUser(action)),\n  takeLatest(actionTypes.users.EDIT_USER, (action: IActionTyped<IUserUpdate>) => updateUser(action)),\n];\n","import { all } from 'redux-saga/effects';\nimport { expensesSaga } from 'sagas/expenses-saga';\nimport { authSaga } from 'sagas/auth-saga';\nimport { usersSaga } from 'sagas/users-saga';\n\nexport function* rootSaga() {\n  yield all([...expensesSaga, ...authSaga, ...usersSaga]);\n}\n","import { IAppState } from 'models';\nimport { defaultAuthState, defaultExpensesState, defaultUserState } from 'reducers';\n\nexport const defaultAppState: IAppState = {\n  expensesStore: defaultExpensesState,\n  authStore: defaultAuthState,\n  usersStore: defaultUserState,\n};\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport reduxSaga from 'redux-saga';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport { authReducer, expensesReducer, usersReducer } from 'reducers';\nimport { rootSaga } from 'sagas/root-saga';\nimport axios from 'axios';\nimport { actions, actionTypes } from 'actions';\nimport { defaultAppState } from './root-state';\nimport { JWT_KEY } from '../utils/keys';\n\nconst appHistory = createBrowserHistory();\nconst sagaMiddleware = reduxSaga();\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst appStore = combineReducers({\n  expensesStore: expensesReducer,\n  authStore: authReducer,\n  usersStore: usersReducer,\n  router: connectRouter(appHistory),\n});\nconst rootStore = (state: any, action: any) => {\n  if (action.type === actionTypes.auth.LOGOUT) {\n    state = defaultAppState;\n  }\n  return appStore(state, action);\n};\nconst store = createStore(rootStore, composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(appHistory))));\n\naxios.interceptors.request.use((config) => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem(JWT_KEY)}`;\n  return config;\n});\n\naxios.interceptors.response.use(\n  (resp) => resp,\n  (error) => {\n    if (error.response.status === 401) {\n      window.location.replace('/logout');\n    }\n    return Promise.reject(error);\n  }\n);\nsagaMiddleware.run(rootSaga);\nstore.dispatch(actions.users.loadAllUsersStart());\n\nexport { store, appHistory };\n","import { IAppState } from 'models';\n\nconst getExpenses = (state: IAppState) => state.expensesStore.expenses;\nconst getTypes = (state: IAppState) => state.expensesStore.types;\nconst getParts = (state: IAppState) => state.expensesStore.parts;\nconst getExpensesSchemas = (state: IAppState) => state.expensesStore.schemas;\nconst getSchemaChartData = (state: IAppState) => state.expensesStore.currentSchemaChartData;\nconst getCompanyChartData = (state: IAppState) => state.expensesStore.companyChart;\nconst getSchemaSummary = (state: IAppState) => state.expensesStore.currentSchemaSummary;\nexport {\n  getExpenses,\n  getTypes,\n  getExpensesSchemas,\n  getSchemaChartData,\n  getCompanyChartData,\n  getParts,\n  getSchemaSummary,\n};\n","import { IAppState } from 'models';\nimport { find } from 'lodash';\nconst getUsers = (state: IAppState) => state.usersStore.users;\nconst getUserById = (state: IAppState, id: number) => find(state.usersStore.users, ['id', id]);\nexport { getUsers, getUserById };\n","import * as React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Container } from 'react-bootstrap';\nimport * as _ from 'lodash';\nimport { useSelector } from 'react-redux';\nimport { getSchemaChartData } from 'selectors';\nimport { getRandomColor } from 'utils';\n\nconst ExpensesCharts: React.FC = React.memo(() => {\n  const chartData = useSelector(getSchemaChartData);\n  const values = _.map(chartData.barChart.data, (data) => data.sum);\n  const borderWithBackgroundColor = getRandomColor(values);\n  const data = {\n    labels: _.map(chartData.barChart.data, (data) => data.label),\n    datasets: [\n      {\n        label: 'Schema expenses',\n        data: values,\n        backgroundColor: _.map(borderWithBackgroundColor, (el: any) => el.background),\n        borderColor: _.map(borderWithBackgroundColor, (el: any) => el.border),\n        borderWidth: 1,\n        order: 2,\n      },\n      {\n        label: 'Total expenses',\n        data: chartData.lineChart.data,\n        type: 'line',\n        borderColor: 'rgba(0, 123, 255, 0.1)',\n        backgroundColor: 'rgba(0, 0, 0, 0)',\n        order: 1,\n      },\n    ],\n  };\n  return (\n    <Container>\n      <Bar data={data} />\n    </Container>\n  );\n});\n\nexport { ExpensesCharts };\n","import * as React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Container } from 'react-bootstrap';\nimport * as _ from 'lodash';\nimport { getRandomColor } from 'utils';\nimport { IBarChart, ICompanyBarCharts } from '../../models/expenses';\ninterface ICompanyExpenseChartProps {\n  chartData: ICompanyBarCharts;\n}\nconst CompanyExpenseChart: React.FC<ICompanyExpenseChartProps> = ({ chartData }) => {\n  const chartByType = prepareChart(chartData.chartByType, 'Average by type');\n  const chartBySchema = prepareChart(chartData.chartBySchema, 'Total expenses by schema');\n\n  return (\n    <Container>\n      <Bar data={chartByType} />\n      <Bar data={chartBySchema} />\n    </Container>\n  );\n};\n\nconst prepareChart = (chartByType: IBarChart, title: string) => {\n  const values = _.map(chartByType.data, (data) => data.sum);\n  const borderWithBackgroundColor = getRandomColor(values);\n  return {\n    labels: _.map(chartByType.data, (data) => data.label),\n    datasets: [\n      {\n        label: title,\n        data: values,\n        backgroundColor: _.map(borderWithBackgroundColor, (el: any) => el.background),\n        borderColor: _.map(borderWithBackgroundColor, (el: any) => el.border),\n        borderWidth: 1,\n        order: 2,\n      },\n    ],\n  };\n};\n\nexport { CompanyExpenseChart };\n","import React from 'react';\nimport { Button, Col, Form } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { actions } from 'actions';\nimport * as Yup from 'yup';\n\nconst defaultExpenseSchemaCreate = {\n  name: '',\n};\nconst expenseSchemaSchema = Yup.object().shape({\n  name: Yup.string().required(),\n});\n\nconst ExpensesSchemaForm: React.FC = React.memo(() => {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={defaultExpenseSchemaCreate}\n      validationSchema={expenseSchemaSchema}\n      onSubmit={(values, act) => {\n        dispatch(\n          actions.expenses.createExpenseSchema({\n            name: values.name,\n          })\n        );\n\n        act.setSubmitting(false);\n      }}\n    >\n      {({ handleSubmit, handleChange, values }) => (\n        <Form onSubmit={handleSubmit}>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"expenseSchemaFormName\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Expense schema name\"\n                name=\"name\"\n                value={values.name}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <div>\n              <Button size=\"sm\" variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </div>\n          </Form.Row>\n        </Form>\n      )}\n    </Formik>\n  );\n});\n\nexport { ExpensesSchemaForm };\n","import React from 'react';\nimport { Button, Col, Container, ListGroup, Row } from 'react-bootstrap';\nimport { ExpensesTypeForm } from './forms/ExpenseSettingTypeForm';\nimport { ExpensesSchemaForm } from './forms/ExpenseSettingSchemaForm';\nimport * as _ from 'lodash';\nimport { IExpenseSchema, IExpenseType } from '../../models/expenses';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getExpensesSchemas } from '../../selectors';\nimport { actions } from 'actions';\n\nconst ExpensesSchemasPage: React.FC = React.memo(() => {\n  const schemas = useSelector(getExpensesSchemas);\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <ExpensesSchemaForm />\n      <ListGroup variant=\"flush\">\n        {_.map(schemas, (schema: IExpenseSchema) => {\n          return (\n            <ListGroup.Item id={schema.id.toString()}>\n              <Row noGutters={true} className=\"align-items-center\">\n                <Col sm={11}>{`${schema.name}`}</Col>\n                <Col sm>\n                  <Button variant=\"danger\" onClick={() => dispatch(actions.expenses.deleteExpenseSchema(schema))}>\n                    Remove\n                  </Button>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup>\n    </Container>\n  );\n});\n\nexport { ExpensesSchemasPage };\n","import React from 'react';\nimport { Button, Col, Form } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { actions } from 'actions';\nimport * as Yup from 'yup';\n\nconst defaultExpenseTypeCreate = {\n  name: '',\n};\nconst expenseSchema = Yup.object().shape({\n  name: Yup.string().required(),\n});\n\nconst ExpensesTypeForm: React.FC = React.memo(() => {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={defaultExpenseTypeCreate}\n      validationSchema={expenseSchema}\n      onSubmit={(values, act) => {\n        dispatch(\n          actions.expenses.createExpenseType({\n            name: values.name,\n          })\n        );\n\n        act.setSubmitting(false);\n      }}\n    >\n      {({ handleSubmit, handleChange, values }) => (\n        <Form onSubmit={handleSubmit}>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"expenseTypeFormName\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Expense type name\"\n                name=\"name\"\n                value={values.name}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <div>\n              <Button size=\"sm\" variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </div>\n          </Form.Row>\n        </Form>\n      )}\n    </Formik>\n  );\n});\n\nexport { ExpensesTypeForm };\n","import React from 'react';\nimport { Button, Card, Col, Container, ListGroup, Row } from 'react-bootstrap';\nimport { ExpensesTypeForm } from './forms/ExpenseSettingTypeForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTypes } from 'selectors';\nimport * as _ from 'lodash';\nimport { IExpenseType } from 'models';\nimport { actions } from 'actions';\n\nconst ExpensesTypesPage: React.FC = React.memo(() => {\n  const types = useSelector(getTypes);\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <ExpensesTypeForm />\n      <ListGroup variant=\"flush\">\n        {_.map(types, (type: IExpenseType) => {\n          return (\n            <ListGroup.Item id={type.id.toString()}>\n              <Row noGutters={true} className=\"align-items-center\">\n                <Col sm={11}>{`${type.name}`}</Col>\n                <Col sm>\n                  <Button variant=\"danger\" onClick={() => dispatch(actions.expenses.deleteExpenseType(type))}>\n                    Remove\n                  </Button>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup>\n    </Container>\n  );\n});\n\nexport { ExpensesTypesPage };\n","import React from 'react';\nimport { Button, Col, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { actions } from 'actions';\nimport * as Yup from 'yup';\nimport { getParts } from '../../../selectors';\n\nconst defaultPricePartCreate = {\n  name: '',\n  percentile: 50,\n  isReturn: false,\n};\nconst partSchema = Yup.object().shape({\n  name: Yup.string().required(),\n  percentile: Yup.number().required().min(0).max(100),\n  isReturn: Yup.boolean().required(),\n});\n\nconst ExpensesPricePartForm: React.FC = React.memo(() => {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={defaultPricePartCreate}\n      validationSchema={partSchema}\n      onSubmit={(values, act) => {\n        dispatch(\n          actions.expenses.createExpensePricePart({\n            name: values.name,\n            percentile: values.percentile / 100,\n            isReturn: values.isReturn,\n          })\n        );\n\n        act.resetForm({});\n        act.setStatus({ success: true });\n        act.setSubmitting(false);\n      }}\n    >\n      {({ handleSubmit, handleChange, values }) => (\n        <Form onSubmit={handleSubmit}>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"pricePartFormName\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Price part name\"\n                name=\"name\"\n                value={values.name}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"pricePartFormPercentile\">\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Price percentile\"\n                name=\"percentile\"\n                value={values.percentile}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"pricePartFormReturn\">\n              <Form.Check type=\"checkbox\" label=\"Is return?\" name=\"isReturn\" onChange={handleChange} />\n            </Form.Group>\n            <div>\n              <Button size=\"sm\" variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </div>\n          </Form.Row>\n        </Form>\n      )}\n    </Formik>\n  );\n});\n\nexport { ExpensesPricePartForm };\n","import React from 'react';\nimport { Button, Card, Col, Container, ListGroup, Row } from 'react-bootstrap';\nimport { ExpensesTypeForm } from './forms/ExpenseSettingTypeForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getParts, getTypes } from '../../selectors';\nimport * as _ from 'lodash';\nimport { IExpensePart, IExpenseType } from '../../models/expenses';\nimport { ExpensesPricePartForm } from './forms/ExpensePricePartForm';\nimport { actions } from 'actions';\n\nconst ExpensesPricePartPage: React.FC = React.memo(() => {\n  const parts = useSelector(getParts);\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <ExpensesPricePartForm />\n      <ListGroup variant=\"flush\">\n        {_.map(parts, (part: IExpensePart) => {\n          return (\n            <ListGroup.Item id={part.id.toString()}>\n              <Row noGutters={true} className=\"align-items-center\">\n                <Col sm={6}>{`${part.name}`}</Col>\n                <Col sm={5}>{`${part.percentile * 100}`}</Col>\n                <Col sm>\n                  <Button variant=\"danger\" onClick={() => dispatch(actions.expenses.deleteExpensePricePart(part))}>\n                    Remove\n                  </Button>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup>\n    </Container>\n  );\n});\n\nexport { ExpensesPricePartPage };\n","import * as React from 'react';\nimport { Dispatch } from 'redux';\nimport { actions } from 'actions';\nimport { IAppState, IBarChart, ICompanyBarCharts, IExpenseSchema, IExpenseType } from 'models';\nimport { Container, Nav, Navbar, NavDropdown, Row } from 'react-bootstrap';\nimport { ExpensesPage } from 'components';\nimport { connect } from 'react-redux';\nimport { Link, Route, RouteComponentProps, Switch, withRouter } from 'react-router-dom';\nimport * as _ from 'lodash';\nimport { ExpensesCharts } from './ExpensesCharts';\nimport { CompanyExpenseChart } from './CompanyExpenseChart';\nimport { ExpensesSchemasPage } from './ExpenseSchemasPage';\nimport { ExpensesTypesPage } from './ExpenseTypesPage';\nimport { ExpensesPricePartPage } from './ExpensePricePartPage';\n\ninterface IExpensesModuleBaseProps extends RouteComponentProps<any> {\n  dispatch: Dispatch;\n  areExpensesLoading: boolean;\n  types: IExpenseType[];\n  schemas: IExpenseSchema[];\n  chartData: ICompanyBarCharts;\n}\n\nclass ExpensesModuleBase extends React.PureComponent<IExpensesModuleBaseProps> {\n  componentDidMount() {\n    this.props.dispatch(actions.expenses.loadAllTypesStart());\n    this.props.dispatch(actions.expenses.loadAllSchemasStart());\n    this.props.dispatch(actions.expenses.loadAllPartsStart());\n  }\n\n  render() {\n    return (\n      <Container fluid={true}>\n        <Row className=\"navs\">\n          <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n            <Link to=\"/expenses\" className=\"mr-auto expenses__nav-link nav-link\">\n              Expenses\n            </Link>\n            <Navbar.Toggle aria-controls=\"expenses_sheet_nav\" />\n            <Navbar.Collapse id=\"expenses_sheet_nav\">\n              <Nav className=\"mr-auto\">\n                <NavDropdown id=\"expenses_sheet_dropdown\" title=\"Sheets\" className=\"expenses__nav-link\">\n                  {_.map(this.props.schemas, (schema: IExpenseSchema) => {\n                    return (\n                      <Row className=\"dropdown-item\" key={schema.id.toString()}>\n                        <Link to={`/expenses/schema/${schema.id}`} className=\"nav-item\">\n                          <p>{schema.name}</p>\n                        </Link>\n                      </Row>\n                    );\n                  })}\n                </NavDropdown>\n              </Nav>\n            </Navbar.Collapse>\n            <Link to=\"/expenses/charts\" className=\"mr-auto expenses__nav-link nav-link\">\n              Charts\n            </Link>\n          </Navbar>\n        </Row>\n        <Container></Container>\n        <Switch>\n          <Route exact={true} path={'/expenses/schema/:id'} component={ExpensesPage} />\n          <Route exact={true} path={'/expenses/types'} component={ExpensesTypesPage} />\n          <Route exact={true} path={'/expenses/sheets'} component={ExpensesSchemasPage} />\n          <Route exact={true} path={'/expenses/parts'} component={ExpensesPricePartPage} />\n          <Route exact={true} path={'/expenses/charts'} component={ExpensesCharts} />\n          <Route\n            exact={true}\n            path={'/expenses'}\n            component={() => <CompanyExpenseChart chartData={this.props.chartData} />}\n          />\n        </Switch>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IAppState) => {\n  return {\n    areExpensesLoading: state.expensesStore.areExpensesLoading,\n    types: state.expensesStore.types,\n    schemas: state.expensesStore.schemas,\n    chartData: state.expensesStore.companyChart,\n  };\n};\n\nconst ExpensesModule = connect(mapStateToProps)(withRouter(ExpensesModuleBase));\nexport { ExpensesModule };\n","import React from 'react';\nimport { IExpense, IExpenseType, IUser } from 'models';\nimport * as _ from 'lodash';\nimport { Accordion, Button, Card, Col, ListGroup, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getExpenses, getTypes, getUsers } from 'selectors';\nimport { actions } from 'actions';\nimport { isEmpty } from 'lodash';\n\nconst ExpensesList: React.FC = () => {\n  const expenses = useSelector(getExpenses);\n  const users = useSelector(getUsers);\n  const types = useSelector(getTypes);\n  const dispatch = useDispatch();\n  const grouped = _.groupBy(expenses, (expense: IExpense) => expense.typeId);\n\n  return (\n    <>\n      {_.map(grouped, (expenses: IExpense[], key) => {\n        return (\n          <Accordion defaultActiveKey=\"0\">\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"expenses__list\">\n                <Row>\n                  <Col sm={10}>{`${_.find(types, (type: IExpenseType) => type.id === Number(key))!!.name}`}</Col>\n                  <Col sm={2}>{`${'Sum: ' + _.sumBy(expenses, (expense: IExpense) => expense.price)}`}</Col>\n                </Row>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card>\n                  <Card.Header>\n                    <Row noGutters={true} className=\"align-items-center\">\n                      <Col sm={4}>Expense name</Col>\n                      <Col sm={3}>Expense type</Col>\n                      <Col sm={2}>User</Col>\n                      <Col sm={2}>Price</Col>\n                      <Col sm />\n                    </Row>\n                  </Card.Header>\n                  <ListGroup variant=\"flush\">\n                    {_.map(expenses, (expense: IExpense) => {\n                      return (\n                        <ListGroup.Item id={expense.id.toString()}>\n                          <Row noGutters={true} className=\"align-items-center\">\n                            <Col sm={4}>{`${isEmpty(expense.name) ? 'Undefined' : expense.name}`}</Col>\n                            <Col sm={3}>{`${expense.typeId}`}</Col>\n                            <Col sm={2}>{`${\n                              (_.find(users, (user: IUser) => user.id === expense.userId) || { username: '' }).username\n                            }`}</Col>\n                            <Col sm={2}>{`${expense.price}`}</Col>\n                            <Col sm>\n                              <Button\n                                variant=\"danger\"\n                                onClick={() => dispatch(actions.expenses.deleteExpense(expense))}\n                              >\n                                Remove\n                              </Button>\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      );\n                    })}\n                  </ListGroup>\n                </Card>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n        );\n      })}\n    </>\n  );\n};\n\nexport { ExpensesList };\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { getSchemaSummary, getUsers } from 'selectors';\nimport { map, find, sortBy, forEach } from 'lodash';\nimport { ITotalSummary, IUser, IUserSummary, SimpleMap } from 'models';\nexport const ExpenseSummary: React.FC = React.memo(() => {\n  const users = useSelector(getUsers);\n  const summary = useSelector(getSchemaSummary);\n  const headers = sortBy(Object.keys(summary.total.pricePartsMap), (str: string) => str);\n  return (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th>Users</th>\n          <th>Sum</th>\n          {map(headers, (name: string) => {\n            return <th>{name}</th>;\n          })}\n          <th>To return</th>\n        </tr>\n      </thead>\n      <tbody>\n        {map(summary.usersSummary, (sum: IUserSummary) => {\n          return (\n            <tr>\n              <td>{find(users, (u: IUser) => u.id === sum.userId)!!.username}</td>\n              <td>{sum.summary.payed}</td>\n              {map(headers, (partName: string) => {\n                return <td>{sum.summary.pricePartsMap[partName] || 0}</td>;\n              })}\n              <td>{sum.summary.toReturn}</td>\n            </tr>\n          );\n        })}\n        <tr>\n          <td>Total</td>\n          <th>{summary.total.payed}</th>\n          {map(headers, (value: string) => {\n            return <td>{summary.total.pricePartsMap[value]}</td>;\n          })}\n          <td>{summary.total.toReturn}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n});\n","import React, { createRef } from 'react';\nimport { Button, Col, Container, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport { actions } from 'actions';\nimport { IAppState, IExpense, IExpensePart, IExpenseType, IUser } from 'models';\nimport * as Yup from 'yup';\nimport * as _ from 'lodash';\nimport { ExpensesList } from './ExpensesList';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { Dispatch } from 'redux';\nimport { ExpenseSummary } from './ExpenseSummary';\n\nconst expenseSchema = Yup.object().shape({\n  name: Yup.string(),\n  price: Yup.number().required().positive().min(1),\n  typeName: Yup.string().required(),\n  user: Yup.string().required(),\n  part: Yup.string().required(),\n});\n\ninterface SchemaIdRouteProps {\n  id: string;\n}\n\ninterface IExpensesPageProps extends RouteComponentProps<SchemaIdRouteProps> {\n  dispatch: Dispatch;\n  schemaId: number;\n  types: IExpenseType[];\n  users: IUser[];\n  expenses: IExpense[];\n  priceParts: IExpensePart[];\n  areExpensesLoading: boolean;\n}\n\nclass ExpensesPageBase extends React.PureComponent<IExpensesPageProps> {\n  private inputRef = createRef<HTMLInputElement>();\n\n  componentDidMount() {\n    const { dispatch, schemaId } = this.props;\n    if (!_.isNaN(schemaId)) {\n      dispatch(actions.expenses.loadSchemaExpensesStart(schemaId));\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<IExpensesPageProps>, prevState: Readonly<{}>, snapshot?: any) {\n    if (prevProps.schemaId !== this.props.schemaId && !_.isNaN(this.props.schemaId)) {\n      const { dispatch, schemaId } = this.props;\n      dispatch(actions.expenses.loadSchemaExpensesStart(schemaId));\n    }\n  }\n\n  render() {\n    const { dispatch, types, users, schemaId, priceParts } = this.props;\n    const defaultExpenseCreate = {\n      name: '',\n      price: 0.0,\n      typeName: _.head(_.map(types, (t: IExpenseType) => t.name)) || '',\n      user: _.head(_.map(users, (u: IUser) => u.username || u.email)) || '',\n      part: _.head(_.map(priceParts, (u: IExpensePart) => u.name)) || '',\n    };\n\n    return (\n      <Container>\n        <Formik\n          initialValues={defaultExpenseCreate}\n          validationSchema={expenseSchema}\n          onSubmit={(values, act) => {\n            dispatch(\n              actions.expenses.createExpense({\n                name: values.name,\n                price: values.price,\n                typeId: _.find(types, (t: IExpenseType) => t.name === values.typeName)!!.id,\n                userId: _.find(users, (t: IUser) => t.username === values.user || t.email === values.user)!!.id,\n                schemaId: schemaId,\n                pricePart: _.find(priceParts, (p: IExpensePart) => p.name === values.part)!!.id,\n              })\n            );\n            act.resetForm({\n              values: { typeName: values.typeName, name: '', price: 0, user: values.user, part: values.part },\n            });\n            act.setStatus({ success: true });\n            act.setSubmitting(false);\n            this.inputRef.current!.focus();\n          }}\n        >\n          {({ handleSubmit, handleChange, values, errors }) => (\n            <Form onSubmit={handleSubmit}>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"expenseFormPrice\">\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Enter price\"\n                    name=\"price\"\n                    value={values.price}\n                    onChange={handleChange}\n                    isInvalid={!!errors.price}\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"expenseFormType\">\n                  <Form.Control\n                    as=\"select\"\n                    placeholder=\"Select type\"\n                    name=\"typeName\"\n                    value={values.typeName}\n                    onChange={handleChange}\n                    isInvalid={!!errors.typeName}\n                  >\n                    {_.map(types, (type: IExpenseType) => {\n                      return <option id={type.id.toString()}>{type.name}</option>;\n                    })}\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"expenseFormUser\">\n                  <Form.Control\n                    as=\"select\"\n                    placeholder=\"Select user\"\n                    name=\"user\"\n                    value={values.user}\n                    onChange={handleChange}\n                  >\n                    {_.map(users, (user: IUser) => {\n                      return <option id={user.id.toString()}>{user.username || user.email}</option>;\n                    })}\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"expenseFormUser\">\n                  <Form.Control\n                    as=\"select\"\n                    placeholder=\"Select part\"\n                    name=\"part\"\n                    value={values.part}\n                    onChange={handleChange}\n                  >\n                    {_.map(priceParts, (p: IExpensePart) => {\n                      return <option id={p.id.toString()}>{p.name}</option>;\n                    })}\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"expenseFormName\">\n                  <Form.Control\n                    ref={this.inputRef}\n                    type=\"text\"\n                    placeholder=\"Enter expense name\"\n                    name=\"name\"\n                    value={values.name}\n                    onChange={handleChange}\n                    isInvalid={!!errors.name}\n                  />\n                </Form.Group>\n                <div>\n                  <Button size=\"sm\" variant=\"primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </div>\n              </Form.Row>\n            </Form>\n          )}\n        </Formik>\n        {this.props.areExpensesLoading ? (\n          <p>Loading</p>\n        ) : (\n          <>\n            <ExpenseSummary />\n            <ExpensesList />\n          </>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IAppState, props: IExpensesPageProps) => {\n  return {\n    types: state.expensesStore.types,\n    users: state.usersStore.users,\n    expenses: state.expensesStore.expenses,\n    schemaId: Number(props.match.params['id']),\n    priceParts: state.expensesStore.parts,\n    areExpensesLoading: state.expensesStore.areExpensesLoading,\n  };\n};\nconst ExpensesPage = connect(mapStateToProps)(withRouter(ExpensesPageBase));\nexport { ExpensesPage };\n","import * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions } from 'actions';\nimport { JWT_KEY } from 'utils';\n\nconst LogoutModule = React.memo(() => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    localStorage.removeItem(JWT_KEY);\n    dispatch(actions.auth.logout());\n  });\n\n  return <div>Logout</div>;\n});\nexport { LogoutModule };\n","import * as React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { ILogin } from 'models';\nimport { useDispatch } from 'react-redux';\nimport { actions } from 'actions';\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().required(),\n  password: Yup.string().required(),\n});\n\nconst defaultLoginValues: ILogin = {\n  email: '',\n  password: '',\n};\n\nconst LoginModuleForm = () => {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={defaultLoginValues}\n      validationSchema={loginSchema}\n      onSubmit={(values, act) => {\n        dispatch(\n          actions.auth.login({\n            email: values.email,\n            password: values.password,\n          })\n        );\n        act.setSubmitting(false);\n      }}\n    >\n      {({ handleSubmit, handleChange, values }) => (\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              name=\"email\"\n              value={values.email}\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={values.password}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport const LoginModule = LoginModuleForm;\n","import * as React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { actions } from 'actions';\n\nconst registerSchema = Yup.object().shape({\n  email: Yup.string().required(),\n  password: Yup.string().required(),\n  company: Yup.string().required(),\n  username: Yup.string(),\n});\n\nconst defaultRegisterLogin = {\n  company: '',\n  email: '',\n  password: '',\n  username: '',\n};\n\nconst RegisterModuleForm = () => {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={defaultRegisterLogin}\n      validationSchema={registerSchema}\n      onSubmit={(values, act) => {\n        dispatch(\n          actions.auth.register({\n            user: {\n              email: values.email,\n              password: values.password,\n              username: values.username,\n            },\n            company: {\n              name: values.company,\n            },\n          })\n        );\n        act.setSubmitting(false);\n      }}\n    >\n      {({ handleSubmit, handleChange, values }) => (\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"registerFormCompany\">\n            <Form.Label>Company name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter company name\"\n              name=\"company\"\n              value={values.company}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"registerFormUsername\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter username\"\n              name=\"username\"\n              value={values.username}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"registerFormEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              name=\"email\"\n              value={values.email}\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"registerFormPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={values.password}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport const RegisterModule = RegisterModuleForm;\n","import * as React from 'react';\nimport { NavLink, withRouter, Switch, Route } from 'react-router-dom';\n\nconst SidebarBase: React.FC<object> = React.memo(() => (\n  <div className=\"sidebar\">\n    <h3 className=\"sidebar__title\">Navigation</h3>\n\n    <NavLink className=\"sidebar__link\" activeClassName=\"sidebar__link--active\" exact={true} to={'/expenses'}>\n      <span className={'sidebar__link-text'}>Expenses</span>\n    </NavLink>\n\n    <Switch>\n      <Route\n        path={'/expenses'}\n        render={(routeProps) => {\n          return (\n            <>\n              <NavLink\n                className=\"sidebar__link--inner\"\n                activeClassName=\"sidebar__link--active\"\n                exact={false}\n                to={'/expenses/types'}\n              >\n                <span className={'sidebar__link-text'}>Types</span>\n              </NavLink>\n              <NavLink\n                className=\"sidebar__link--inner\"\n                activeClassName=\"sidebar__link--active\"\n                exact={false}\n                to={'/expenses/sheets'}\n              >\n                <span className={'sidebar__link-text'}>Sheets</span>\n              </NavLink>\n              <NavLink\n                className=\"sidebar__link--inner\"\n                activeClassName=\"sidebar__link--active\"\n                exact={false}\n                to={'/expenses/parts'}\n              >\n                <span className={'sidebar__link-text'}>Price parts</span>\n              </NavLink>\n            </>\n          );\n        }}\n      />\n    </Switch>\n    <NavLink className=\"sidebar__link\" activeClassName=\"sidebar__link--active\" exact={true} to={'/users'}>\n      <span className={'sidebar__link-text'}>Users</span>\n    </NavLink>\n    <NavLink className=\"sidebar__link\" activeClassName=\"sidebar__link--active\" exact={true} to={'/logout'}>\n      <span className={'sidebar__link-text'}>Logout</span>\n    </NavLink>\n  </div>\n));\n\nconst Sidebar = withRouter(SidebarBase);\n\nexport { Sidebar };\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUsers } from 'selectors';\nimport * as _ from 'lodash';\nimport { IUser } from 'models';\nimport { Button, Card, Col, ListGroup, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nconst UsersList: React.FC = () => {\n  const users = useSelector(getUsers);\n  return (\n    <Card>\n      <ListGroup variant=\"flush\">\n        {_.map(users, (user: IUser) => {\n          return (\n            <ListGroup.Item key={user.id.toString()}>\n              <Row noGutters={true} className=\"align-items-center\">\n                <Col sm={10}>{`${user.username || user.email}`}</Col>\n                <Col sm>\n                  <Link to={`/users/edit/${user.id}`}>\n                    <Button variant=\"warning\">Edit</Button>\n                  </Link>\n                </Col>\n                <Col sm>\n                  <Button variant=\"danger\">Remove</Button>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport { UsersList };\n","import * as React from 'react';\nimport { UsersList } from './UsersList';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { actions } from '../../actions';\nimport { useDispatch } from 'react-redux';\nimport { Button, Col, Form } from 'react-bootstrap';\n\nconst defaultUserValues = {\n  username: '',\n  email: '',\n  password: '',\n};\nconst userCreateSchema = Yup.object().shape({\n  username: Yup.string().required(),\n  email: Yup.string().required(),\n  password: Yup.string().required(),\n});\n\nconst UsersPage: React.FC = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Formik\n        key=\"user-create-form\"\n        initialValues={defaultUserValues}\n        validationSchema={userCreateSchema}\n        onSubmit={(values, act) => {\n          dispatch(\n            actions.users.createUser({\n              username: values.username,\n              email: values.email,\n              password: values.password,\n            })\n          );\n        }}\n      >\n        {({ handleSubmit, handleChange, values }) => (\n          <Form onSubmit={handleSubmit} id=\"user-create-form\" key=\"user-create-form\">\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"userFormUsername\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  value={values.username}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"userFormEmail\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"userFormPassword\">\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              <div>\n                <Button size=\"sm\" variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </div>\n            </Form.Row>\n          </Form>\n        )}\n      </Formik>\n      <UsersList />\n    </>\n  );\n};\n\nexport { UsersPage };\n","import { isEmpty } from 'lodash';\n\nfunction undefOrValue<A>(value: A) {\n  return isEmpty(value) ? undefined : value;\n}\n\nexport { undefOrValue };\n","import * as React from 'react';\nimport { actions } from '../../actions';\nimport { Button, Form } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { getUserById } from 'selectors';\nimport { IAppState, IUser } from 'models';\nimport { Dispatch } from 'redux';\nimport { undefOrValue } from '../../utils/model';\n\nconst expenseSchema = Yup.object().shape({\n  name: Yup.string(),\n  password: Yup.string(),\n  confirmPassword: Yup.string(),\n});\n\ninterface UserIdRouteProps {\n  id: string;\n}\n\ninterface UserEditProps extends RouteComponentProps<UserIdRouteProps> {\n  dispatch: Dispatch;\n  user?: IUser;\n  id: number;\n}\n\nconst UsersEditBase: React.FC<UserEditProps> = ({ dispatch, user, id }) => {\n  const defaultUserEditSchema = {\n    username: user!!.username || '',\n    password: '',\n    confirmPassword: '',\n  };\n  return (\n    <Formik\n      key=\"user-edit-form\"\n      initialValues={defaultUserEditSchema}\n      validationSchema={expenseSchema}\n      onSubmit={(values, act) => {\n        dispatch(\n          actions.users.editUser({\n            id,\n            username: undefOrValue(values.username),\n            password: undefOrValue(values.password),\n            confirmPassword: undefOrValue(values.confirmPassword),\n          })\n        );\n\n        act.resetForm({});\n        act.setStatus({ success: true });\n        act.setSubmitting(false);\n      }}\n    >\n      {({ handleSubmit, handleChange, values }) => (\n        <Form onSubmit={handleSubmit} id=\"user-edit-form\" key=\"user-edit-form\">\n          <Form.Group controlId=\"userEditFormName\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Name\"\n              name=\"username\"\n              value={values.username}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"userEditFormPassword\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={values.password}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"userEditFormConfirmPassword\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              name=\"confirmPassword\"\n              value={values.confirmPassword}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <div>\n            <Button size=\"sm\" variant=\"primary\" type=\"submit\" id=\"editSubmit\">\n              Submit\n            </Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nconst mapStateToProps = (state: IAppState, props: UserEditProps) => {\n  return {\n    user: getUserById(state, Number(props.match.params['id'])),\n    id: Number(props.match.params['id']),\n  };\n};\n\nexport const UsersEdit = connect(mapStateToProps)(UsersEditBase);\n","import * as React from 'react';\nimport { JWT_KEY } from 'utils';\nimport { Redirect } from 'react-router-dom';\n\nfunction withAuth<T>(WrappedComponent: React.ComponentType<T>) {\n  return class ComponentWithSelection extends React.Component<T> {\n    render() {\n      const hasToken = !!localStorage.getItem(JWT_KEY);\n\n      return hasToken ? <WrappedComponent {...this.props} /> : <Redirect to=\"/login\" />;\n    }\n  };\n}\n\nexport { withAuth };\n","import * as React from 'react';\nimport { Dispatch } from 'redux';\nimport { Container, Navbar, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\nimport { UsersPage } from './UsersPage';\nimport { Switch, Route } from 'react-router-dom';\nimport { UsersEdit } from './UsersEdit';\n\ninterface IUsersModuleBaseProps extends RouteComponentProps<any> {\n  dispatch: Dispatch;\n}\n\nclass UsersModuleBase extends React.PureComponent<IUsersModuleBaseProps> {\n  render() {\n    return (\n      <Container fluid={true}>\n        <Row className=\"navs\">\n          <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n            <Link to=\"/users\" className=\"mr-auto expenses__nav-link nav-link\">\n              Users\n            </Link>\n          </Navbar>\n        </Row>\n        <Container>\n          <Switch>\n            <Route exact={true} path=\"/users/edit/:id\" component={UsersEdit} />\n            <Route exact={true} path=\"/users\" component={UsersPage} />\n          </Switch>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nconst UsersModule = connect()(withRouter(UsersModuleBase));\nexport { UsersModule };\n","import * as React from 'react';\nimport './App.css';\nimport { ExpensesModule, Sidebar, UsersModule, withAuth } from 'components';\nimport { connect } from 'react-redux';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport 'styles/index.scss';\n\nconst AppBase: React.FC = () => {\n  return (\n    <div className=\"app__wrapper\">\n      <Sidebar />\n      <div className=\"app__container\">\n        <Switch>\n          <Route path={'/expenses'} component={ExpensesModule} />\n          <Route path={'/users'} component={UsersModule} />\n          <Redirect to={'/'} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport const App = withAuth(connect()(AppBase));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { appHistory, store } from './store/root-store';\nimport { App } from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route, Switch } from 'react-router-dom';\nimport { LoginModule, LogoutModule, RegisterModule } from 'components';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={appHistory}>\n      <Switch>\n        <Route exact={true} path=\"/logout\" component={LogoutModule} />\n        <Route exact={true} path={'/login'} component={LoginModule} />\n        <Route exact={true} path={'/register'} component={RegisterModule} />\n        <Route path=\"/\" component={App} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}